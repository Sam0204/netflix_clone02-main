{"ast":null,"code":"var _jsxFileName = \"E:\\\\netflix_clone02-main\\\\app\\\\src\\\\components\\\\movie-list\\\\MovieList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-list.scss';\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport { Link } from 'react-router-dom';\nimport Button from '../button/Button';\nimport tmdbApi, { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport MovieCard from '../movie-card/MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieList = props => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n      const params = {};\n\n      if (props.type !== 'similar') {\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(props.type, {\n              params\n            });\n            break;\n\n          default:\n            response = await tmdbApi.getTvList(props.type, {\n              params\n            });\n        }\n      } else {\n        response = await tmdbApi.similar(props.category, props.id);\n      }\n\n      setItems(response.results);\n    };\n\n    getList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      grabCursor: true,\n      spaceBetween: 10,\n      slidesPerView: 'auto',\n      children: items.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          item: item,\n          category: props.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 17\n  }, this);\n};\n\n_s(MovieList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = MovieList;\nMovieList.propTypes = {\n  category: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","SwiperSlide","Swiper","Link","Button","tmdbApi","category","apiConfig","MovieCard","MovieList","props","items","setItems","getList","response","params","type","movie","getMoviesList","getTvList","similar","id","results","map","item","i","propTypes","string","isRequired"],"sources":["E:/netflix_clone02-main/app/src/components/movie-list/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './movie-list.scss';\n\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../button/Button';\n\nimport tmdbApi, { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport MovieCard from '../movie-card/MovieCard';\n\n\nconst MovieList = props => {\n\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            const params = {};\n\n            if (props.type !== 'similar') {\n                switch(props.category) {\n                    case category.movie:\n                        response = await tmdbApi.getMoviesList(props.type, {params});\n                        break;\n                    default:\n                        response = await tmdbApi.getTvList(props.type, {params});\n                }\n            } else {\n                response = await tmdbApi.similar(props.category, props.id);\n            }\n            setItems(response.results);\n        }\n        getList();\n    }, []);\n\n    return (\n\n                <div className=\"movie-list\">\n            <Swiper\n                grabCursor={true}\n                spaceBetween={10}\n                slidesPerView={'auto'}\n            >\n                {\n                    items.map((item, i) => (\n                        <SwiperSlide key={i}>\n                            <MovieCard item={item} category={props.category}/>\n                        </SwiperSlide>\n                    ))\n                }\n            </Swiper>\n        </div>\n                \n      \n    \n    \n    );\n}\n\nMovieList.propTypes = {\n    category: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default MovieList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,mBAAP;AAEA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,cAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,OAAP,IAAkBC,QAAlB,QAAkC,mBAAlC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAGA,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAA;;EAEvB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMc,OAAO,GAAG,YAAY;MACxB,IAAIC,QAAQ,GAAG,IAAf;MACA,MAAMC,MAAM,GAAG,EAAf;;MAEA,IAAIL,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;QAC1B,QAAON,KAAK,CAACJ,QAAb;UACI,KAAKA,QAAQ,CAACW,KAAd;YACIH,QAAQ,GAAG,MAAMT,OAAO,CAACa,aAAR,CAAsBR,KAAK,CAACM,IAA5B,EAAkC;cAACD;YAAD,CAAlC,CAAjB;YACA;;UACJ;YACID,QAAQ,GAAG,MAAMT,OAAO,CAACc,SAAR,CAAkBT,KAAK,CAACM,IAAxB,EAA8B;cAACD;YAAD,CAA9B,CAAjB;QALR;MAOH,CARD,MAQO;QACHD,QAAQ,GAAG,MAAMT,OAAO,CAACe,OAAR,CAAgBV,KAAK,CAACJ,QAAtB,EAAgCI,KAAK,CAACW,EAAtC,CAAjB;MACH;;MACDT,QAAQ,CAACE,QAAQ,CAACQ,OAAV,CAAR;IACH,CAhBD;;IAiBAT,OAAO;EACV,CAnBQ,EAmBN,EAnBM,CAAT;EAqBA,oBAEY;IAAK,SAAS,EAAC,YAAf;IAAA,uBACJ,QAAC,MAAD;MACI,UAAU,EAAE,IADhB;MAEI,YAAY,EAAE,EAFlB;MAGI,aAAa,EAAE,MAHnB;MAAA,UAMQF,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACN,QAAC,WAAD;QAAA,uBACI,QAAC,SAAD;UAAW,IAAI,EAAED,IAAjB;UAAuB,QAAQ,EAAEd,KAAK,CAACJ;QAAvC;UAAA;UAAA;UAAA;QAAA;MADJ,GAAkBmB,CAAlB;QAAA;QAAA;QAAA;MAAA,QADJ;IANR;MAAA;MAAA;MAAA;IAAA;EADI;IAAA;IAAA;IAAA;EAAA,QAFZ;AAsBH,CA/CD;;GAAMhB,S;;KAAAA,S;AAiDNA,SAAS,CAACiB,SAAV,GAAsB;EAClBpB,QAAQ,EAAEN,SAAS,CAAC2B,MAAV,CAAiBC,UADT;EAElBZ,IAAI,EAAEhB,SAAS,CAAC2B,MAAV,CAAiBC;AAFL,CAAtB;AAKA,eAAenB,SAAf"},"metadata":{},"sourceType":"module"}