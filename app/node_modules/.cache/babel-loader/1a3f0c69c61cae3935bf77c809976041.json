{"ast":null,"code":"var _jsxFileName = \"E:\\\\netflix_clone02-main\\\\app\\\\src\\\\pages\\\\detail\\\\VideoList.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router';\nimport tmdbApi from '../../api/tmdbApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoList = props => {\n  _s();\n\n  const {\n    category\n  } = useParams();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    const getVideos = async () => {\n      const res = await tmdbApi.getVideos(category, props.id);\n      setVideos(res.results.slice(0, 5));\n    };\n\n    getVideos();\n  }, [category, props.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: videos.map((item, i) => /*#__PURE__*/_jsxDEV(Video, {\n      item: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n};\n\n_s(VideoList, \"sGl8u651aV2MFvoRiWs4JpPXviY=\", false, function () {\n  return [useParams];\n});\n\n_c = VideoList;\n\nconst Video = props => {\n  _s2();\n\n  const item = props.item;\n  const iframeRef = useRef(null);\n  useEffect(() => {\n    const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\n    iframeRef.current.setAttribute('height', height);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video__title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: `https://www.youtube.com/embed/${item.key}`,\n      ref: iframeRef,\n      width: \"100%\",\n      title: \"video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Video, \"xrPm9S+7ob9FwtLVsZjNguOLSgs=\");\n\n_c2 = Video;\nexport default VideoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoList\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","tmdbApi","VideoList","props","category","videos","setVideos","getVideos","res","id","results","slice","map","item","i","Video","iframeRef","height","current","offsetWidth","setAttribute","name","key"],"sources":["E:/netflix_clone02-main/app/src/pages/detail/VideoList.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\n\nconst VideoList = props => {\n\n    const {category} = useParams();\n\n    const [videos, setVideos] = useState([]);\n\n    useEffect(() => {\n        const getVideos = async () => {\n            const res = await tmdbApi.getVideos(category, props.id);\n            setVideos(res.results.slice(0, 5));\n        }\n        getVideos();\n    }, [category, props.id]);\n\n    return (\n        <>\n            {\n                videos.map((item, i) => (\n                    <Video key={i} item={item}/>\n                ))\n            }\n        </>\n    );\n}\n\nconst Video = props => {\n\n    const item = props.item;\n\n    const iframeRef = useRef(null);\n\n    useEffect(() => {\n        const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\n        iframeRef.current.setAttribute('height', height);\n    }, []);\n\n    return (\n        <div className=\"video\">\n            <div className=\"video__title\">\n                <h2>{item.name}</h2>\n            </div>\n            <iframe\n                src={`https://www.youtube.com/embed/${item.key}`}\n                ref={iframeRef}\n                width=\"100%\"\n                title=\"video\"\n            ></iframe>\n        </div>\n    )\n}\n\nexport default VideoList;\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAA;;EAEvB,MAAM;IAACC;EAAD,IAAaJ,SAAS,EAA5B;EAEA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,YAAY;MAC1B,MAAMC,GAAG,GAAG,MAAMP,OAAO,CAACM,SAAR,CAAkBH,QAAlB,EAA4BD,KAAK,CAACM,EAAlC,CAAlB;MACAH,SAAS,CAACE,GAAG,CAACE,OAAJ,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAAD,CAAT;IACH,CAHD;;IAIAJ,SAAS;EACZ,CANQ,EAMN,CAACH,QAAD,EAAWD,KAAK,CAACM,EAAjB,CANM,CAAT;EAQA,oBACI;IAAA,UAEQJ,MAAM,CAACO,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACP,QAAC,KAAD;MAAe,IAAI,EAAED;IAArB,GAAYC,CAAZ;MAAA;MAAA;MAAA;IAAA,QADJ;EAFR,iBADJ;AASH,CAvBD;;GAAMZ,S;UAEiBF,S;;;KAFjBE,S;;AAyBN,MAAMa,KAAK,GAAGZ,KAAK,IAAI;EAAA;;EAEnB,MAAMU,IAAI,GAAGV,KAAK,CAACU,IAAnB;EAEA,MAAMG,SAAS,GAAGjB,MAAM,CAAC,IAAD,CAAxB;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMmB,MAAM,GAAGD,SAAS,CAACE,OAAV,CAAkBC,WAAlB,GAAgC,CAAhC,GAAoC,EAApC,GAAyC,IAAxD;IACAH,SAAS,CAACE,OAAV,CAAkBE,YAAlB,CAA+B,QAA/B,EAAyCH,MAAzC;EACH,CAHQ,EAGN,EAHM,CAAT;EAKA,oBACI;IAAK,SAAS,EAAC,OAAf;IAAA,wBACI;MAAK,SAAS,EAAC,cAAf;MAAA,uBACI;QAAA,UAAKJ,IAAI,CAACQ;MAAV;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MACI,GAAG,EAAG,iCAAgCR,IAAI,CAACS,GAAI,EADnD;MAEI,GAAG,EAAEN,SAFT;MAGI,KAAK,EAAC,MAHV;MAII,KAAK,EAAC;IAJV;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CAxBD;;IAAMD,K;;MAAAA,K;AA0BN,eAAeb,SAAf"},"metadata":{},"sourceType":"module"}