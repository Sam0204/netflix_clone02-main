{"ast":null,"code":"import { extend } from '../../../utils/utils';\nexport default function updateSlides() {\n  var swiper = this;\n\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    } // prettier-ignore\n\n\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n\n  var params = swiper.params;\n  var $wrapperEl = swiper.$wrapperEl,\n      swiperSize = swiper.size,\n      rtl = swiper.rtlTranslate,\n      wrongRTL = swiper.wrongRTL;\n  var isVirtual = swiper.virtual && params.virtual.enabled;\n  var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n  var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  var snapGrid = [];\n  var slidesGrid = [];\n  var slidesSizesGrid = [];\n  var offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  var offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  var previousSnapGridLength = swiper.snapGrid.length;\n  var previousSlidesGridLength = swiper.slidesGrid.length;\n  var spaceBetween = params.spaceBetween;\n  var slidePosition = -offsetBefore;\n  var prevSlideSize = 0;\n  var index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginBottom: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: '',\n    marginTop: ''\n  });\n  var slidesNumberEvenToRows;\n\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  } // Calc slides\n\n\n  var slideSize;\n  var slidesPerColumn = params.slidesPerColumn;\n  var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n  for (var i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    var slide = slides.eq(i);\n\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      var newSlideOrderIndex = void 0;\n      var column = void 0;\n      var row = void 0;\n\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n        slide.css({\n          '-webkit-box-ordinal-group': newSlideOrderIndex,\n          '-moz-box-ordinal-group': newSlideOrderIndex,\n          '-ms-flex-order': newSlideOrderIndex,\n          '-webkit-order': newSlideOrderIndex,\n          order: newSlideOrderIndex\n        });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - column * slidesPerColumn;\n\n        if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n          row += 1;\n\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - row * slidesPerRow;\n      }\n\n      slide.css(getDirectionLabel('margin-top'), row !== 0 ? params.spaceBetween && params.spaceBetween + \"px\" : '');\n    }\n\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      var slideStyles = getComputedStyle(slide[0]);\n      var currentTransform = slide[0].style.transform;\n      var currentWebKitTransform = slide[0].style.webkitTransform;\n\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        var width = getDirectionPropertyValue(slideStyles, 'width');\n        var paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        var paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        var marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        var marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        var boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          var _slide$ = slide[0],\n              clientWidth = _slide$.clientWidth,\n              offsetWidth = _slide$.offsetWidth;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = slideSize + \"px\";\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  var newSlidesGrid;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: swiper.virtualSize + params.spaceBetween + \"px\"\n    });\n  }\n\n  if (params.setWrapperSize) {\n    var _$wrapperEl$css;\n\n    $wrapperEl.css((_$wrapperEl$css = {}, _$wrapperEl$css[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css));\n  }\n\n  if (params.slidesPerColumn > 1) {\n    var _$wrapperEl$css2;\n\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    $wrapperEl.css((_$wrapperEl$css2 = {}, _$wrapperEl$css2[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css2));\n\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n\n      for (var _i = 0; _i < snapGrid.length; _i += 1) {\n        var slidesGridItem = snapGrid[_i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n\n      snapGrid = newSlidesGrid;\n    }\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n\n    for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {\n      var _slidesGridItem = snapGrid[_i2];\n      if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\n\n      if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(_slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    var _slides$filter$css;\n\n    var key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter(function (_, slideIndex) {\n      if (!params.cssMode) return true;\n\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n\n      return true;\n    }).css((_slides$filter$css = {}, _slides$filter$css[key] = spaceBetween + \"px\", _slides$filter$css));\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    var allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    var maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(function (snap) {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    var _allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    _allSlidesSize -= params.spaceBetween;\n\n    if (_allSlidesSize < swiperSize) {\n      var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n      snapGrid.forEach(function (snap, snapIndex) {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach(function (snap, snapIndex) {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  extend(swiper, {\n    slides: slides,\n    snapGrid: snapGrid,\n    slidesGrid: slidesGrid,\n    slidesSizesGrid: slidesSizesGrid\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}","map":{"version":3,"names":["extend","updateSlides","swiper","getDirectionLabel","property","isHorizontal","getDirectionPropertyValue","node","label","parseFloat","getPropertyValue","params","$wrapperEl","swiperSize","size","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","length","children","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","call","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","index","indexOf","replace","virtualSize","css","marginLeft","marginBottom","marginTop","marginRight","slidesNumberEvenToRows","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slideSize","slidesPerRow","numFullColumns","i","slide","eq","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","min","order","slideStyles","getComputedStyle","currentTransform","style","transform","currentWebKitTransform","webkitTransform","roundLengths","outerWidth","outerHeight","width","paddingLeft","paddingRight","boxSizing","_slide$","clientWidth","offsetWidth","swiperSlideSize","push","centeredSlides","abs","slidesPerGroupSkip","newSlidesGrid","effect","setWrapperSize","_$wrapperEl$css","_$wrapperEl$css2","_i","slidesGridItem","_i2","_slidesGridItem","_slides$filter$css","key","filter","_","slideIndex","cssMode","centeredSlidesBounds","allSlidesSize","forEach","slideSizeValue","maxSnap","map","snap","centerInsufficientSlides","_allSlidesSize","allSlidesOffset","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset"],"sources":["E:/netflix_clone02-main/app/node_modules/swiper/esm/components/core/update/updateSlides.js"],"sourcesContent":["import { extend } from '../../../utils/utils';\nexport default function updateSlides() {\n  var swiper = this;\n\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    } // prettier-ignore\n\n\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n\n  var params = swiper.params;\n  var $wrapperEl = swiper.$wrapperEl,\n      swiperSize = swiper.size,\n      rtl = swiper.rtlTranslate,\n      wrongRTL = swiper.wrongRTL;\n  var isVirtual = swiper.virtual && params.virtual.enabled;\n  var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n  var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  var snapGrid = [];\n  var slidesGrid = [];\n  var slidesSizesGrid = [];\n  var offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  var offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  var previousSnapGridLength = swiper.snapGrid.length;\n  var previousSlidesGridLength = swiper.slidesGrid.length;\n  var spaceBetween = params.spaceBetween;\n  var slidePosition = -offsetBefore;\n  var prevSlideSize = 0;\n  var index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginBottom: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: '',\n    marginTop: ''\n  });\n  var slidesNumberEvenToRows;\n\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  } // Calc slides\n\n\n  var slideSize;\n  var slidesPerColumn = params.slidesPerColumn;\n  var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n  for (var i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    var slide = slides.eq(i);\n\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      var newSlideOrderIndex = void 0;\n      var column = void 0;\n      var row = void 0;\n\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n        slide.css({\n          '-webkit-box-ordinal-group': newSlideOrderIndex,\n          '-moz-box-ordinal-group': newSlideOrderIndex,\n          '-ms-flex-order': newSlideOrderIndex,\n          '-webkit-order': newSlideOrderIndex,\n          order: newSlideOrderIndex\n        });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - column * slidesPerColumn;\n\n        if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n          row += 1;\n\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - row * slidesPerRow;\n      }\n\n      slide.css(getDirectionLabel('margin-top'), row !== 0 ? params.spaceBetween && params.spaceBetween + \"px\" : '');\n    }\n\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      var slideStyles = getComputedStyle(slide[0]);\n      var currentTransform = slide[0].style.transform;\n      var currentWebKitTransform = slide[0].style.webkitTransform;\n\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        var width = getDirectionPropertyValue(slideStyles, 'width');\n        var paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        var paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        var marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        var marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        var boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          var _slide$ = slide[0],\n              clientWidth = _slide$.clientWidth,\n              offsetWidth = _slide$.offsetWidth;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = slideSize + \"px\";\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  var newSlidesGrid;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: swiper.virtualSize + params.spaceBetween + \"px\"\n    });\n  }\n\n  if (params.setWrapperSize) {\n    var _$wrapperEl$css;\n\n    $wrapperEl.css((_$wrapperEl$css = {}, _$wrapperEl$css[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css));\n  }\n\n  if (params.slidesPerColumn > 1) {\n    var _$wrapperEl$css2;\n\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    $wrapperEl.css((_$wrapperEl$css2 = {}, _$wrapperEl$css2[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css2));\n\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n\n      for (var _i = 0; _i < snapGrid.length; _i += 1) {\n        var slidesGridItem = snapGrid[_i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n\n      snapGrid = newSlidesGrid;\n    }\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n\n    for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {\n      var _slidesGridItem = snapGrid[_i2];\n      if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\n\n      if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(_slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    var _slides$filter$css;\n\n    var key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter(function (_, slideIndex) {\n      if (!params.cssMode) return true;\n\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n\n      return true;\n    }).css((_slides$filter$css = {}, _slides$filter$css[key] = spaceBetween + \"px\", _slides$filter$css));\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    var allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    var maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(function (snap) {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    var _allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    _allSlidesSize -= params.spaceBetween;\n\n    if (_allSlidesSize < swiperSize) {\n      var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n      snapGrid.forEach(function (snap, snapIndex) {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach(function (snap, snapIndex) {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  extend(swiper, {\n    slides: slides,\n    snapGrid: snapGrid,\n    slidesGrid: slidesGrid,\n    slidesSizesGrid: slidesSizesGrid\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}