{"ast":null,"code":"export default function onScroll() {\n  var swiper = this;\n  var wrapperEl = swiper.wrapperEl,\n      rtlTranslate = swiper.rtlTranslate,\n      enabled = swiper.enabled;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n\n  if (swiper.isHorizontal()) {\n    if (rtlTranslate) {\n      swiper.translate = wrapperEl.scrollWidth - wrapperEl.offsetWidth - wrapperEl.scrollLeft;\n    } else {\n      swiper.translate = -wrapperEl.scrollLeft;\n    }\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  } // eslint-disable-next-line\n\n\n  if (swiper.translate === -0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  var newProgress;\n  var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}","map":{"version":3,"names":["onScroll","swiper","wrapperEl","rtlTranslate","enabled","previousTranslate","translate","isHorizontal","scrollWidth","offsetWidth","scrollLeft","scrollTop","updateActiveIndex","updateSlidesClasses","newProgress","translatesDiff","maxTranslate","minTranslate","progress","updateProgress","emit"],"sources":["E:/netflix_clone02-main/app/node_modules/swiper/esm/components/core/events/onScroll.js"],"sourcesContent":["export default function onScroll() {\n  var swiper = this;\n  var wrapperEl = swiper.wrapperEl,\n      rtlTranslate = swiper.rtlTranslate,\n      enabled = swiper.enabled;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n\n  if (swiper.isHorizontal()) {\n    if (rtlTranslate) {\n      swiper.translate = wrapperEl.scrollWidth - wrapperEl.offsetWidth - wrapperEl.scrollLeft;\n    } else {\n      swiper.translate = -wrapperEl.scrollLeft;\n    }\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  } // eslint-disable-next-line\n\n\n  if (swiper.translate === -0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  var newProgress;\n  var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}"],"mappings":"AAAA,eAAe,SAASA,QAAT,GAAoB;EACjC,IAAIC,MAAM,GAAG,IAAb;EACA,IAAIC,SAAS,GAAGD,MAAM,CAACC,SAAvB;EAAA,IACIC,YAAY,GAAGF,MAAM,CAACE,YAD1B;EAAA,IAEIC,OAAO,GAAGH,MAAM,CAACG,OAFrB;EAGA,IAAI,CAACA,OAAL,EAAc;EACdH,MAAM,CAACI,iBAAP,GAA2BJ,MAAM,CAACK,SAAlC;;EAEA,IAAIL,MAAM,CAACM,YAAP,EAAJ,EAA2B;IACzB,IAAIJ,YAAJ,EAAkB;MAChBF,MAAM,CAACK,SAAP,GAAmBJ,SAAS,CAACM,WAAV,GAAwBN,SAAS,CAACO,WAAlC,GAAgDP,SAAS,CAACQ,UAA7E;IACD,CAFD,MAEO;MACLT,MAAM,CAACK,SAAP,GAAmB,CAACJ,SAAS,CAACQ,UAA9B;IACD;EACF,CAND,MAMO;IACLT,MAAM,CAACK,SAAP,GAAmB,CAACJ,SAAS,CAACS,SAA9B;EACD,CAhBgC,CAgB/B;;;EAGF,IAAIV,MAAM,CAACK,SAAP,KAAqB,CAAC,CAA1B,EAA6BL,MAAM,CAACK,SAAP,GAAmB,CAAnB;EAC7BL,MAAM,CAACW,iBAAP;EACAX,MAAM,CAACY,mBAAP;EACA,IAAIC,WAAJ;EACA,IAAIC,cAAc,GAAGd,MAAM,CAACe,YAAP,KAAwBf,MAAM,CAACgB,YAAP,EAA7C;;EAEA,IAAIF,cAAc,KAAK,CAAvB,EAA0B;IACxBD,WAAW,GAAG,CAAd;EACD,CAFD,MAEO;IACLA,WAAW,GAAG,CAACb,MAAM,CAACK,SAAP,GAAmBL,MAAM,CAACgB,YAAP,EAApB,IAA6CF,cAA3D;EACD;;EAED,IAAID,WAAW,KAAKb,MAAM,CAACiB,QAA3B,EAAqC;IACnCjB,MAAM,CAACkB,cAAP,CAAsBhB,YAAY,GAAG,CAACF,MAAM,CAACK,SAAX,GAAuBL,MAAM,CAACK,SAAhE;EACD;;EAEDL,MAAM,CAACmB,IAAP,CAAY,cAAZ,EAA4BnB,MAAM,CAACK,SAAnC,EAA8C,KAA9C;AACD"},"metadata":{},"sourceType":"module"}