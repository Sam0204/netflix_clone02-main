{"ast":null,"code":"import { now, nextTick } from '../../../utils/utils';\nexport default function onTouchEnd(event) {\n  var swiper = this;\n  var data = swiper.touchEventsData;\n  var params = swiper.params,\n      touches = swiper.touches,\n      rtl = swiper.rtlTranslate,\n      $wrapperEl = swiper.$wrapperEl,\n      slidesGrid = swiper.slidesGrid,\n      snapGrid = swiper.snapGrid,\n      enabled = swiper.enabled;\n  if (!enabled) return;\n  var e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n\n  data.allowTouchCallbacks = false;\n\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n\n  var touchEndTime = now();\n  var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(function () {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  var currentPos;\n\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        var lastMoveEvent = data.velocities.pop();\n        var velocityEvent = data.velocities.pop();\n        var distance = lastMoveEvent.position - velocityEvent.position;\n        var time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        } // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n\n\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n      data.velocities.length = 0;\n      var momentumDuration = 1000 * params.freeModeMomentumRatio;\n      var momentumDistance = swiper.velocity * momentumDuration;\n      var newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      var doBounce = false;\n      var afterBouncePosition;\n      var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      var needsLoopFix;\n\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        var nextSlide;\n\n        for (var j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n\n        newPosition = -newPosition;\n      }\n\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', function () {\n          swiper.loopFix();\n        });\n      } // Fix duration\n\n\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(function () {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(function () {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      swiper.emit('_freeModeNoMomentumRelease');\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    return;\n  } // Find current slide\n\n\n  var stopIndex = 0;\n  var groupSize = swiper.slidesSizesGrid[0];\n\n  for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    var _increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (typeof slidesGrid[i + _increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + _increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + _increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  } // Find current slide size\n\n\n  var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","map":{"version":3,"names":["now","nextTick","onTouchEnd","event","swiper","data","touchEventsData","params","touches","rtl","rtlTranslate","$wrapperEl","slidesGrid","snapGrid","enabled","e","originalEvent","allowTouchCallbacks","emit","isTouched","isMoved","grabCursor","setGrabCursor","startMoving","allowSlideNext","allowSlidePrev","touchEndTime","timeDiff","touchStartTime","allowClick","updateClickedSlide","lastClickTime","destroyed","swipeDirection","diff","currentTranslate","startTranslate","currentPos","followFinger","translate","cssMode","freeMode","minTranslate","slideTo","activeIndex","maxTranslate","slides","length","freeModeMomentum","velocities","lastMoveEvent","pop","velocityEvent","distance","position","time","velocity","Math","abs","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","doBounce","afterBouncePosition","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","allowMomentumBounce","loop","centeredSlides","freeModeSticky","nextSlide","j","once","loopFix","moveDistance","currentSlideSize","slidesSizesGrid","speed","slideToClosest","updateProgress","setTransition","setTranslate","transitionStart","animating","transitionEnd","setTimeout","updateActiveIndex","updateSlidesClasses","longSwipesMs","stopIndex","groupSize","i","slidesPerGroupSkip","slidesPerGroup","_increment","ratio","increment","longSwipes","longSwipesRatio","shortSwipes","isNavButtonTarget","navigation","target","nextEl","prevEl"],"sources":["E:/netflix_clone02-main/app/node_modules/swiper/esm/components/core/events/onTouchEnd.js"],"sourcesContent":["import { now, nextTick } from '../../../utils/utils';\nexport default function onTouchEnd(event) {\n  var swiper = this;\n  var data = swiper.touchEventsData;\n  var params = swiper.params,\n      touches = swiper.touches,\n      rtl = swiper.rtlTranslate,\n      $wrapperEl = swiper.$wrapperEl,\n      slidesGrid = swiper.slidesGrid,\n      snapGrid = swiper.snapGrid,\n      enabled = swiper.enabled;\n  if (!enabled) return;\n  var e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n\n  data.allowTouchCallbacks = false;\n\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n\n  var touchEndTime = now();\n  var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(function () {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  var currentPos;\n\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        var lastMoveEvent = data.velocities.pop();\n        var velocityEvent = data.velocities.pop();\n        var distance = lastMoveEvent.position - velocityEvent.position;\n        var time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        } // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n\n\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n      data.velocities.length = 0;\n      var momentumDuration = 1000 * params.freeModeMomentumRatio;\n      var momentumDistance = swiper.velocity * momentumDuration;\n      var newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      var doBounce = false;\n      var afterBouncePosition;\n      var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      var needsLoopFix;\n\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        var nextSlide;\n\n        for (var j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n\n        newPosition = -newPosition;\n      }\n\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', function () {\n          swiper.loopFix();\n        });\n      } // Fix duration\n\n\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(function () {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(function () {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      swiper.emit('_freeModeNoMomentumRelease');\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    return;\n  } // Find current slide\n\n\n  var stopIndex = 0;\n  var groupSize = swiper.slidesSizesGrid[0];\n\n  for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    var _increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (typeof slidesGrid[i + _increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + _increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + _increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  } // Find current slide size\n\n\n  var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}